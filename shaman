#!/bin/bash

# DIRNAME=`dirname "$0"`
# ROOT=`cd "$DIRNAME"; pwd`
ROOT_NAME=my-emacs-config
ROOT=`cd ~/$ROOT_NAME; pwd`
echo "ROOT="`pwd`
export PATH=$ROOT:$PATH

CACHE=$ROOT/cache
APP_HOME=$CACHE/apps
ZIP_HOME=$CACHE/apps-zip
export PATH=$CACHE/bin:$PATH

if [ ! -d $CACHE ]; then
    mkdir $CACHE
fi

PROJECT_BLOG=demo-kwok.github.io

DIR_BLOG=$ROOT/blog
DIR_DOC=$ROOT/docs
DIR_PROJECT=$ROOT/project
DIR_LLVM_WHERE=$ROOT/dev
DIR_LLVM=$ROOT/dev/llvm

################################################################################

function link-init-el() {
    cp -rf $ROOT/emacs-config/init.el $HOME/.emacs
}

function run-emacs {
    if [ ! -f $HOME/.emacs ]; then
	link-init-el
    fi

    emacs --debug-init
    exit
}

function run-emacs-nw {
    if [ ! -f $HOME/.emacs ]; then
	link-init-el
    fi

    emacs -nw --debug-init
}

function delete-etc {
    cd $ROOT/emacs-config/modules
    rm -rf *.elc
    cd $ROOT
}

function pull {
    echo "func::pull"
    cd $ROOT
    git reset
    git pull
}

function pull-blog {
    echo "func::pull-blog"
    cd $ROOT
    git reset
    git pull

    echo blog
    if [ ! -d $DIR_BLOG ]; then
	git clone https://github.com/damon-kwok/damon-kwok.github.io.git blog
    else
	cd $DIR_BLOG
	git pull
    fi

    echo doc
    if [ ! -d $DIR_DOC ]; then
	svn co svn://www.svn999.com/guowangwei.my-docs docs
    else
	cd $DIR_DOC
	svn cleanup .
	svn up
    fi

    echo project
    if [ ! -d $DIR_PROJECT ]; then
	svn co svn://www.svn999.com/guowangwei.my-projects project
    else
	cd $DIR_PROJECT
	svn cleanup .
	svn up
    fi

    #for linux
    echo link
    if [ ! -f /usr/bin/shaman ]; then
	sudo ln -s $ROOT/shaman /usr/bin/shaman
    fi

    if [ ! -d ~/docs ]; then
	ln -s $ROOT/docs ~/docs
    fi

    if [ ! -d ~/blog ]; then
	ln -s $ROOT/blog ~/blog
    fi

}

function push {
    echo "func:push"
    cd $ROOT
    git reset
    git pull
    git add .
    git status
    read -p "please enter commit message:" msg
    echo "commit: $msg"
    git commit -m "$msg"
    git push -u origin master
}

function push-a {
    echo "func::push-a"
    cd $ROOT    
    git reset
    git pull
    git add .
    git status
    # git commit -m "upgrade by "`uname -n`
    git commit -m `date +%Y-%m-%d@%H-%M-%S` # "upgrade by "`uname -n`
    git push -u origin master
}

function push-blog {
    echo "func::push-blog"
    cd $ROOT/blog
    git reset
    git pull
    git add .
    git status
    git commit -m `date +%Y-%m-%d@%H-%M-%S` # "upgrade by "`uname -n`
    git push -u origin master
}

function zipapp {
    echo "func::zipapp"
    cd $CACHE
    zip -r apps.zip apps
    mv apps.zip $ZIP_HOME/apps.zip
    cd $ZIP_HOME
    rm -rf *.zip.*
    split -d -b 3m apps.zip apps.zip.
    sleep 1s
    rm -rf apps.zip

    cd $ROOT
}

function unzipapp {
    echo "func::unzipapp"
    cd $ZIP_HOME
    ls
    cat *.zip.* > apps.zip
    unzip apps.zip
    sleep 1s
    rm -rf apps.zip
    mv apps ..

    cd $ROOT
}

function pushapp {
    echo "func::pushapp"
    cd $ZIP_HOME
    zipapp
    push
}

function getapp {
    echo "func::getapp"
    if [ ! -d $APP_HOME ]; then
	if [ ! -d $ZIPHOME ]; then
	    echo pass
	fi
    fi
}

function install-toolchain {
    echo "please choose your os:"
    echo "    1) debian/ubuntu/mint"
    echo "    2) archlinux/manjaro"
    echo "    3) fedora22+"
    echo "    4) macOS"
    echo "    5) msys2"
    echo "    -------------------------"
    echo "    r) return"

    read -p "please enter your choice:" item
    case $item in
	1)
	    # sudo add-apt-repository ppa:mikegedelman/leiningen-git-stable
	    sudo apt update
	    sudo apt install -y build-essential coreutils diffutils zsh wget curl zip unzip git subversion
	    sudo apt install -y python-pip ipython perl ruby nodejs-legacy ocaml haskell-stack elixir cargo rebar openjdk-9-jdk
	    sudo apt install -y ttf-bitstream-vera #zmq ghostscript
	    
	    sudo pip install rope jedi flake8 importmagic autopep8 yapf
	    #oh-my-zsh
	    sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"

	    # install: lien
	    cd $ROOT/cache/bin
	    curl -O https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein
	    chmod +x ./lein
	    ;;
	2)
	    yaourt -Syyu
	    yaourt -S base-devel coreutils diffutils zsh wget curl zip unzip git subversion
	    yaourt -S python2-pip ipython perl rubygems nodejs ocaml haskell-stack-git leiningen elixir cargo rebar3 openjdk-9-jdk ttf-bitstream-vera-dummy oh-my-zsh-git
	    sudo pip install rope jedi flake8 importmagic autopep8 yapf
	    ;;
	3)
	    sudo dnf update
	    sudo dnf groupinstall "Development Tools and Libraries"
	    sudo dnf install coreutils diffutils zsh wget curl zip unzip git subversion python2-pip ipython perl rubygems nodejs-legacy ocaml haskell-stack leiningen elixir cargo rebar  openjdk-9-jdk ttf-bitstream-vera
	    sudo pip install rope jedi flake8 importmagic autopep8 yapf
	    #oh-my-zsh
	    sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
	    ;;
	4)
	    brew update
	    brew install coreutils diffutils zsh wget curl zip unzip git subversion python2-pip ipython perl rubygems nodejs-legacy ocaml haskell-stack leiningen elixir cargo rebar ttf-bitstream-vera
	    pip install rope jedi flake8 importmagic autopep8 yapf
	    #oh-my-zsh
	    sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
	    ;;
	5)
	    pacman -Syyu
	    pacman -S base-devel coreutils diffutils zsh wget curl zip unzip git subversion camke
	    pacman -S python2-pip ipython perl rubygems mingw-w64-x86_64-gcc mingw-w64-x86_64-nodejs
	    pacman -S mingw-w64-x86_64-ocaml ttf-bitstream-vera #mingw-w64-x86_64-zeromq mingw-w64-x86_64-ghostscript

	    # install: lien
	    cd $ROOT/cache/bin
	    curl -O https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein.bat
	    curl -O https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein
	    chmod +x ./lein

	    # install: cargo

	    # install: elixir && erlang-nox

	    # rebar3
	    # cd $ROOT/cache/bin
	    # wget https://s3.amazonaws.com/rebar3/rebar3 && chmod +x rebar3

	    # oh-my-zsh
	    sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"

	    # pip
	    pip install rope jedi flake8 importmagic autopep8 yapf
	    ;;
	r | R) ask-menu;;
	*) ask-repl;;
    esac
}

function ask-blog {
    echo "please choose your choice:"
    echo "    1) pull-blog"
    echo "    2) push-blog"
    echo "    s) shell"    
    echo ------------------------------------
    echo "    r) return"

    read -p "please enter your choice:" item
    case $item in
	1) pull-blog;;
	2) push-blog;;
	s|S) zsh;;
	r|R) ask-menu;;
	*) ask-blog;;
    esac
}

function ask-repl {
    echo "please choose your choice:"
    echo "    1) clojure"
    echo "    2) haskell"
    echo "    3) elixir"
    echo "    4) erlang"
    echo "    -------------------------"
    echo "    r) return"

    read -p "please enter your choice:" item
    case $item in
	1) echo abort with "^C | ^D | (exit) | (quit)" && lein repl;;
	2) echo abort with "^D :quit" && stack repl;;
	3) echo abort with "^C" && iex;;
	4) echo abort with "^C | ^G | q()." erl;;
	r | R) ask-menu;;
	*) ask-repl;;
    esac
}

function ask-menu {
    cd $ROOT
    #echo "func::ask-menu"
    # echo "    0) ask-blog"
    echo "    1) pull"
    echo "    2) push"
    # echo "    2) getapp"
    # echo "    3) pushapp"
    # echo "    4) zipapp"
    # echo "    5) unzipapp"
    echo "    i) install toolchain"
    echo "    e) emacs"
    echo "    n) emacs-nw"
    # echo "    c) complie-elc"
    echo "    l) link init.el"
    echo "    d) delete-elc"
    echo "    --------------------------"
    echo "    r) return"
    echo "    s) shell"
    echo "    z) REPL"
    echo "    q) quit"

    read -p "please enter your choice:" item
    case $item in
	0) ask-blog;;
	1) pull;;
	2) push;;
	3) push-a;;
	# 2) getapp;;
	# 3) pushapp;;
	# 4) zipapp;;
	# 5) unzipapp;;
	i) install-toolchain;;
	e|E) run-emacs;;
	n|N) run-emacs-nw;;
	c|C) compile-elc;;
	l|L) link-init-el;;
	d|D) delete-elc;;
	s|S) zsh;;
	z|Z) ask-repl;;
	q|Q) exit;;
	*) ask-menu;;	    
    esac
    ask-menu
}

ask-menu


echo-ask() {
    read -p $(tput setaf 5)"$1 "$(tput sgr0)
}
echo-warning-ask() {
    read -p $(tput setaf 3)"$1 "$(tput sgr0)
}
echo-success() {
    echo -e $(tput setaf 2)"$1"$(tput sgr0)
}
echo-warning() {
    echo -e $(tput setaf 3)"$1"$(tput sgr0)
}
echo-error() {
    echo -e $(tput setaf 1)"$1"$(tput sgr0)
}
echo-tip() {
    echo -e $(tput setaf 6)"$1"$(tput sgr0)
}
echo-debug() {
    echo -e $(tput setaf 8)"$1"$(tput sgr0)
}
echo-waiting() {
    echo -e $(tput setaf 4)"$1"$(tput sgr0)
}
