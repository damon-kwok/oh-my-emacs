#!/usr/bin/env bash

################################################################################
CURRENT_DIR=$(dirname $(readlink -f $0))
source $CURRENT_DIR/env
################################################################################


################################################################################
function run-emacs {
    if [ ! -f $HOME/.emacs ]; then
	link-init-el
    fi

    emacs --debug-init
    exit
}

function run-emacs-nw {
    if [ ! -f $HOME/.emacs ]; then
	link-init-el
    fi

    emacs -nw --debug-init
}

function delete-etc {
    cd $OME_ROOT/emacs-config/modules
    rm -rf *.elc
    cd $OME_ROOT
}

function link-init-el() {
    tip "link"
    # cp -rf $OME_ROOT/emacs-config/init.el $HOME/.emacs

    bkdir=~/emacs-config-backup/`date +%Y-%m-%d@%H-%M-%S`
    mkdir -p $bkdir

    if [ -e ~/.emacs ]; then
	mv ~/.emacs $bkdir
    fi

    if [ -e ~/.emacs.d ]; then
	mv -a ~/.emacs.d $bkdir
    fi

    if [ -e ~/emacs-config ]; then
	mv ~/emacs-config $bkdir
    fi

    if [ -e ~/workspace ]; then
	mv ~/workspace $bkdir
    fi
    
    if [ -e ~/blog ]; then
	mv ~/blog $bkdir
    fi

    rm ~/.emacs
    rm ~/emacs-config
    rm ~/workspace
    rm ~/blog

    #for linux
    tip "link .emacs"
    cp -a $OME_ROOT/emacs-config/init.el ~/.emacs 
    ln -s $OME_ROOT/emacs-config ~/emacs-config
    ln -s $OME_ROOT/workspace ~/workspace
    ln -s $OME_ROOT/blog ~/blog   
}

function ask-blog {
    echo ""
    tip "please choose your choice:"
    echo "    1) pull-blog"
    echo "    2) push-blog"
    echo "    3) pull-workspace"
    echo "    4) push-workspace"
    echo "    s) shell"    
    echo ------------------------------------
    echo "    r) return"

    read -p "please enter your choice:" item
    case $item in
	1) pull-blog;;
	2) push-blog;;
	# cd $DIR_WORKSPACE
	# svn-commit
	3) pull-workspace;;
        4) push-workspace;;
	s|S) bash;;
	r|R) ask-menu;;
	*) ask-blog;;
    esac

    ask-blog
}

function ask-repl {
    echo ""
    tip "please choose your choice:"
    echo "    1) clojure"
    echo "    2) haskell"
    echo "    3) elixir"
    echo "    4) erlang"
    echo "    -------------------------"
    echo "    r) return"

    read -p "please enter your choice:" item
    case $item in
	1) echo abort with "^C | ^D | (exit) | (quit)" && lein repl;;
	2) echo abort with "^D :quit" && stack repl;;
	3) echo abort with "^C" && iex;;
	4) echo abort with "^C | ^G | q()." && erl;;
	r | R) ask-menu;;
	*) ask-repl;;
    esac
}

function ask-menu {
    cd $OME_ROOT
    #echo "ask-menu"
    # echo "    0) ask-blog"
    echo "=============================="
    echo "    1) pull"
    echo "    2) push"
    # echo "    2) getapp"
    # echo "    3) pushapp"
    # echo "    4) zipapp"
    # echo "    5) unzipapp"
    echo "    b) install basedevel"
    echo "    i) install toolchain"
    echo "    g) git config"
    echo "    e) emacs"
    echo "    n) emacs-nw"
    # echo "    c) complie-elc"
    echo "    l) link init.el"
    echo "    d) delete-elc"
    echo "    --------------------------"
    echo "    r) return"
    echo "    s) shell"
    echo "    z) REPL"
    echo "    q) quit"

    cd $OME_ROOT
    read -p "please enter your choice:" item
    case $item in
	0) ask-blog;;
	1)
	    git-pull
	    source ~/.bashrc
	    ;;
	2) git-push;;
	3) git-push-a;;
	# 2) getapp;;
	# 3) pushapp;;
	# 4) zipapp;;
	# 5) unzipapp;;
	b|B) install-basedevel;;
	i|I) install-toolchain;;
	g|G)
	# git config --global color.ui true
	# git config --global core.editor "ed"
	    
	# git config --global merge.tool ediff-merge
	# git config --global mergetool.diffmerge.cmd "ediff-merge \$LOCAL \$REMOTE \$BASE \$MERGED"
	# git config --global mergetool.keepBackup false

	# git config --global diff.tool ediff
	# git config --global difftool.ediff.cmd "ediff \"\$LOCAL\" \"\$REMOTE\""
	# git config --global difftool.prompt false
	;;
	e|E) run-emacs;;
	n|N) run-emacs-nw;;
	c|C) compile-elc;;
	l|L) link-init-el;;
	d|D) delete-elc;;
	s|S) bash;;
	z|Z) ask-repl;;
	q|Q) exit;;
	*) ask-menu;;	    
    esac
    ask-menu
}

ask-menu
