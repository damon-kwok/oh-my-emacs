#include <iostream>

#include <Poco/Exception.h>
#include <Poco/Net/HTTPClientSession.h>
#include <Poco/Net/HTTPRequest.h>
#include <Poco/Net/HTTPResponse.h>
#include <Poco/Net/NetException.h>
#include <Poco/Net/ServerSocket.h>
#include <Poco/Net/WebSocket.h>

int main(int argc, char *argv[]) {
  char buffer[1024];
  int flags;
  int n;
  std::string payload;

  try {
    Poco::Net::HTTPClientSession cs("echo.websocket.org", 80);
    Poco::Net::HTTPRequest request(Poco::Net::HTTPRequest::HTTP_GET, "/",
                                   "HTTP/1.1");
    Poco::Net::HTTPResponse response;
    std::string cmd;

    Poco::Net::WebSocket *ws =
        new Poco::Net::WebSocket(cs, request, response); // Causes the timeout

    payload = "SGClient: Hello World!";
    std::cout << "Send: SGClient: Hello World!" << std::endl;
    ws->sendFrame(payload.data(), payload.size(),
                  Poco::Net::WebSocket::FRAME_TEXT);
    n = ws->receiveFrame(buffer, sizeof(buffer), flags);
    buffer[n] = '\0';
    std::cout << "Received: " << buffer << std::endl;

    while (cmd != "q") {
      cmd = "";
      std::cout << "Please input[exit]:";
      ws->sendFrame(cmd.data(), cmd.size(), Poco::Net::WebSocket::FRAME_TEXT);
      n = ws->receiveFrame(buffer, sizeof(buffer), flags);
      buffer[n] = '\0';
      if (n > 0) {
        std::cout << "Receive: " << buffer << std::endl;
      }
      std::cin >> cmd;
    }

    ws->shutdown();
  } catch (Poco::Exception ex) {
    std::cerr << ex.displayText() << std::endl;
    std::cerr << ex.what() << std::endl;
    return -1;
  }
}
