/*
import(
	"medusa"
	)*/

type ${1:MyType} struct {
	medusa.Tasklet
	
}

func New$1(name string) *$1 {
    obj := new($1)
	obj.Constructor(name)
	return obj
}

func (self *$1) Constructor(name string) {
	self.Tasklet.Constructor(name)

	//init methods
	self.init_methods()
}

//--------------------------------------------------------------
//$1: methods
//--------------------------------------------------------------
//$1: internal implements
func (self *$1) init_methods() {

	self.AddMethod("$1_Method__Add", func(args ...interface{}) (result interface{}, err error) {
			a := args[0].(int)
			b := args[1].(int)
			result = a+b
			return
	})

	//your code
	$0
}

//$1: external inteface
func (self *$1) Add(a, b int) {
	c, err := self.CallMethod("$1_Method__Add", a, b)
	if err==nil {
			fmt.Printf("%v + %v = %v\n", a, b, c.(int))
	} else {
			fmt.Printf(err.Error())
	}
		
}
